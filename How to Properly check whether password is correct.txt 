Here are the steps to properly check whether a password is correct on a web server:

1. Hash the password: 
When a user creates an account or changes their password, the password should be hashed using a strong one-way hashing algorithm, such as bcrypt or SHA-256. 
- the password cannot be easily reversed to its original form 
- even if an attacker gains access to the hashed password, they should not be able to derive the original password.

2. Store the hashed password securely: 
- The hashed password should be stored securely in a database or other storage mechanism that is not accessible to unauthorized users. 
- Ideally, this storage should be separate from other sensitive user data, such as email addresses or credit card numbers.

3. Compare the input password with the stored hash: 
- When a user tries to log in, the password they enter should be hashed using the same algorithm as the stored hash, and the resulting hash should be compared with the stored hash. 
- If the two hashes match, the password is correct.


{ Add this to report 
    4. Implement rate-limiting: 
    - To protect against brute-force attacks, implement rate-limiting measures that limit the number of login attempts allowed within a certain period of time. 
    (This can prevent attackers from trying thousands of different password combinations in a short amount of time.)

    5. Use multi-factor authentication: Multi-factor authentication provides an additional layer of security by requiring users to provide a second form of authentication, such as a code sent to their phone or a fingerprint scan. This can prevent unauthorized access even if an attacker is able to guess the user's password.

}
